== Ext.ux.Router

Lightweight JavaScript routing engine powered by Ext JS 4 MVC Architecture. It enables your application to monitor 
URL changes, and to dispatch controllers actions based on URL routing system. It also provides browser history 
navigation capabilities.

Take a look at the {official Ext JS guide}[link:http://docs.sencha.com/ext-js/4-0/#!/guide/application_architecture]
to have a further understanding on what Ext MVC is.

== Getting Started

This distribuition already comes exemplified. You just have to get the code and open index.html to see it running.
All code is very well documented and descompressed.

    git clone git@github.com:brunotavares/Ext.ux.Router.git

== Usage

1. Copy Ext.ux.Router.js to your application. Folder suggested: {root}/app/ux;
2. If you follow Ext JS MVC Guide, you'll have an app.js file, which is your application entry point. Don't forget
to add ux folder path to it;

	Ext.application({
	    name: 'AM',
	    autoCreateViewport: true,
	    paths: {
	        'Ext.ux': 'app/ux'
	    }
		...
	});
	
3. Setup routes, The follow the pattern "key:value" as "url matcher:controler#action". Parameters are prefixed by :, e.g. users/:id/edit.
It is also possible to pass parameters as plain querystrings, e.g. "help/list?viewID=3&details=1";
	
	Ext.application({
	    ...

	    /*
	     * Here is where routes are defined.
	     *  key:    URL matcher
	     *  value:  controller + '#' + action to be invoked
	     */
	    routes: {
	        '/': 'home#index',
	        'users': 'users#list',
	        'users/:id/edit': 'users#edit'
	    }
	});
	
4. Create your controllers and actions according to your routes

	Ext.define('AM.controller.Home', {
	    extend: 'Ext.app.Controller',
	    views: ['home.Index'],

	//actions
	    index: function()
	    {
	        //TODO: index
	    }
	});
	
	Ext.define('AM.controller.Users', {
	    extend: 'Ext.app.Controller',
	    views: ['user.List', 'user.Edit'],
	    stores: ['Users'],
	    models: ['User'],

	//actions
	    list: function()
	    {
			//TODO: render list
	    },

	    edit: function(params)
	    {
			//TODO: render edit
	    }
	});

== Notice

Ext.ux.Router is a very lightweight utility and doesn\'t handle rendering process. It only parses URI Tokens and dispatch 
controller\'s action. Rendering is a very specific task from each app, and would add some complexity in order to attend different scenarios. 

This source code already comes with an suggestion on how to handle rendering, by overriding Ext.Controller and creating 
a render() method

== Contributing

We encourage you to contribute to Ext.ux.Router! Ext JS official team is already working on a Router process. 
Meanwhile we can contribute by using Ext.ux.Router and helping create an very well structured code.